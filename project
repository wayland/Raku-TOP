#!/usr/bin/raku

sub	MAIN($action) {
	my $docker_compose_command = "docker-compose -f testing/docker/docker-compose.yml --project-directory .";

	given ($action) {
		when 'test' {
			do_cmd("docker exec raku_raku_1 /bin/bash -lc ./table-tests.rakutest");
		}
		when 'build' {
			do_cmd("$docker_compose_command build raku");
		}
		when 'stop' {
			do_cmd("$docker_compose_command down");
		}
		when 'build-docs' {
			my %doc-types = %(
				Markdown => 'md',
				HTML => 'html',
				Text => 'txt',
			);

			my (@sourcefiles) = qx{find lib \( -name '*.raku' -o -name '*.rakumod' \)}.lines;
			for @sourcefiles -> $sourcefile {
				my $basename = $sourcefile.IO.basename;
				$basename ~~ s/\.rakumod$//;
				for %doc-types.kv -> $format-name, $format-extension {
					build_doc($format-name, $format-extension, 'Class', $sourcefile, $basename);
				}
			}
		}
		default {
			die "Unknown action '$action'";
		}
	}
}

sub	do_cmd($cmd, $level = 1) {
	print "+" x $level;
	say " $cmd";
	print qqx{$cmd};

	return $!;
}

sub	build_doc(Str $format-name, Str $format-extension, Str $type, Str $sourcefile, Str $basename) {
	my $target-file = "docs/$format-name/$type/$basename.$format-extension";
	do_cmd("RAKULIB=lib/raku raku --doc=$format-name $sourcefile > $target-file");
}
